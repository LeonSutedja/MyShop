@model Shop.Pages.Management.Product.ProductOutput
@{
    ViewBag.Title = "Product Management";
    Layout = "~/Shared/Views/_Layout.cshtml";
}

<script>
    function findGetParameter(parameterName) {
        var result = null;
        var tmp = [];
        location.search
            .substr(1)
            .split("&")
            .forEach(function (item) {
                tmp = item.split("=");
                if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
            });
        return result;
    }

    function sortByProductName() {
        if ($("#product-neutral").is(":visible")) {
            window.location.href = 'Product?sortBy=Name&sortDirection=Asc';
        } else if ($("#product-up").is(":visible")) {
            window.location.href = 'Product?sortBy=Name&sortDirection=Desc';
        } else if ($("#product-down").is(":visible")) {
            window.location.href = 'Product?sortBy=Name&sortDirection=Asc';
        }
    }

    function sortByStock() {
        if ($("#stock-neutral").is(":visible")) {
            window.location.href = 'Product?sortBy=StockQuantity&sortDirection=Asc';
        } else if ($("#stock-up").is(":visible")) {
            window.location.href = 'Product?sortBy=StockQuantity&sortDirection=Desc';
        } else if ($("#stock-down").is(":visible")) {
            window.location.href = 'Product?sortBy=StockQuantity&sortDirection=Asc';
        }
    }

    function sortByDescription() {
        if ($("#description-neutral").is(":visible")) {
            window.location.href = 'Product?sortBy=Description&sortDirection=Asc';
        } else if ($("#description-up").is(":visible")) {
            window.location.href = 'Product?sortBy=Description&sortDirection=Desc';
        } else if ($("#description-down").is(":visible")) {
            window.location.href = 'Product?sortBy=Description&sortDirection=Asc';
        }
    }

    function initializeSortButtons() {
        var sortBy = findGetParameter("sortBy");
        var sortDirection = findGetParameter("sortDirection");

        if (sortBy === "Name") {
            if (sortDirection === "Asc") {
                $("#product-neutral").hide();
                $("#product-up").show();
                $("#product-down").hide();
            }
            else {
                $("#product-neutral").hide();
                $("#product-up").hide();
                $("#product-down").show();
            }
        } else {
            $("#product-neutral").show();
            $("#product-up").hide();
            $("#product-down").hide();
        }

        if (sortBy === "StockQuantity") {
            if (sortDirection === "Asc") {
                $("#stock-neutral").hide();
                $("#stock-up").show();
                $("#stock-down").hide();
            }
            else {
                $("#stock-neutral").hide();
                $("#stock-up").hide();
                $("#stock-down").show();
            }
        } else {
            $("#stock-neutral").show();
            $("#stock-up").hide();
            $("#stock-down").hide();
        }

        if (sortBy === "Description") {
            if (sortDirection === "Asc") {
                $("#description-neutral").hide();
                $("#description-up").show();
                $("#description-down").hide();
            }
            else {
                $("#description-neutral").hide();
                $("#description-up").hide();
                $("#description-down").show();
            }
        } else {
            $("#description-neutral").show();
            $("#description-up").hide();
            $("#description-down").hide();
        }
    }

    $(document).ready(function () {
        initializeSortButtons();
    });
</script>

<div class="row">
    <div class="col-md-12">
        <h2>Product Management</h2>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        Product Name
                        <span id="product-neutral">
                            <button class="btn btn-xs" onclick="sortByProductName();">
                                <span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span><span class="glyphicon glyphicon-triangle-right" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="product-down">
                            <button class="btn btn-xs" onclick="sortByProductName();">
                                <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="product-up">
                            <button class="btn btn-xs" onclick="sortByProductName();">
                                <span class="glyphicon glyphicon-triangle-top" aria-hidden="true"></span>
                            </button>
                        </span>
                    </th>
                    <th>
                        Description
                        <span id="description-neutral">
                            <button class="btn btn-xs" onclick="sortByDescription();">
                                <span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span><span class="glyphicon glyphicon-triangle-right" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="description-down">
                            <button class="btn btn-xs" onclick="sortByDescription();">
                                <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="description-up">
                            <button class="btn btn-xs" onclick="sortByDescription();">
                                <span class="glyphicon glyphicon-triangle-top" aria-hidden="true"></span>
                            </button>
                        </span>
                    </th>
                    <th>
                        Stock
                        <span id="stock-neutral">
                            <button class="btn btn-xs" onclick="sortByStock();">
                                <span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span><span class="glyphicon glyphicon-triangle-right" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="stock-down">
                            <button class="btn btn-xs" onclick="sortByStock();">
                                <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                            </button>
                        </span>
                        <span id="stock-up">
                            <button class="btn btn-xs" onclick="sortByStock();">
                                <span class="glyphicon glyphicon-triangle-top" aria-hidden="true"></span>
                            </button>
                        </span>
                    </th>
                    <th></th>
                </tr>
            </thead>
            @foreach(var row in Model.Output.Rows)
            {
                <tr>
                    <td>@row.Cells[0]</td>
                    <td>@row.Cells[2]</td>
                    <td>@row.Cells[1]</td>
                    <td>
                        <button class="btn btn-default" onclick="editDetailsBtn(@row.Id)">Edit</button>
                        <div id="product-details-editor-@row.Id" style="display: none">
                            @using(Html.BeginForm("UpdateProduct", "Product"))
                            {
                                <input name="id" type="hidden" value="@row.Id" />
                                <div class="form-group">
                                    <input name="name" placeholder="Name" class="form-control" type="text" value="@row.Cells[0]" />
                                </div>
                                <div class="form-group">
                                    <input name="description" placeholder="Description" class="form-control" type="text" value="@row.Cells[2]" />
                                </div>
                                <a class="btn btn-default" onclick="cancelDetailsEditorBtn(@row.Id);">Cancel</a>
                                <button class="btn btn-primary">Save</button>
                            }
                        </div>
                    </td>
                </tr>
            }
            <tr>
                <td>Total: @Model.Output.TotalProductOffersCount</td>
                <td><button class="btn btn-default" onclick="addDetailsBtn()">Add</button></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td colspan="3">
                    <div id="product-details-editor-add" style="display: none">
                        @using(Html.BeginForm("AddProduct", "Product"))
                        {
                            <div class="form-group">
                                <input name="name" placeholder="Name" class="form-control" type="text" value="" />
                            </div>
                            <div class="form-group">
                                <input name="description" placeholder="Description" class="form-control" type="text" value="" />
                            </div>
                            <a class="btn btn-default" onclick="cancelDetailsAddBtn();">Cancel</a>
                            <button class="btn btn-primary">Save</button>
                        }
                    </div>
                </td>
                <td></td>
            </tr>
        </table>
        <ul class="pagination">
        @{
            var totalPages = Math.Ceiling(Model.Output.TotalProductOffersCount / (decimal)Model.Input.PageSize);
        }           
        @for (var i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == Model.Input.PageNumber ? "active" : "")">
                <a onclick="changePage(@i)" class="page-link">@i</a>
            </li>
        }
    </ul>
        <script>
            function changePage(pageNumber) {
                if (pageNumber === @Model.Input.PageNumber) {
                    return;
                }
                let sortBy = findGetParameter("sortBy");
                let sortDirection = findGetParameter("sortDirection");

                let getQuery = "";
                if (sortBy !== null) {
                    getQuery += "sortBy=" + sortBy;
                    getQuery += "&sortDirection=" + sortDirection;
                    getQuery += "&pageNumber=" + pageNumber;
                    window.location.href = 'Product?' + getQuery;
                }
                else {
                    getQuery += "pageNumber=" + pageNumber;
                }
                window.location.href = 'Product?' + getQuery;
            }

            function editDetailsBtn(id) {
                $("#product-details-" + id).hide();
                $("#product-details-editor-" + id).show();
            }

            function cancelDetailsEditorBtn(id) {
                $("#product-details-" + id).show();
                $("#product-details-editor-" + id).hide();
                return false;
            }

            function addDetailsBtn() {
                $("#product-details-editor-add").show();
            }

            function cancelDetailsAddBtn() {
                $("#product-details-editor-add").hide();
                return false;
            }
        </script>
    </div>
</div>