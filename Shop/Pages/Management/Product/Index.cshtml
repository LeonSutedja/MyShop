@model Shop.Pages.Management.Product.ProductOutput
@{
    ViewBag.Title = "Product Management";
    Layout = "~/Shared/Views/_Layout.cshtml";
}

<script>
    function findGetParameter(parameterName) {
        var result = null;
        var tmp = [];
        location.search
            .substr(1)
            .split("&")
            .forEach(function (item) {
                tmp = item.split("=");
                if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
            });
        return result;
    }

    function sortBy(identifier) {
        var sortBy = findGetParameter("sortBy");
        var sortDirection = findGetParameter("sortDirection");
        if (sortBy === identifier) {
            if (sortDirection === "Desc") sortDirection = "Asc";
            else sortDirection = "Desc";
        }
        else {
            sortBy = identifier;
            sortDirection = "Desc";
        }
        window.location.href = 'Product?sortBy=' + sortBy + '&sortDirection=' + sortDirection;
    }

    function initializeSortButtons() {
        var sortBy = findGetParameter("sortBy");
        var sortDirection = findGetParameter("sortDirection");

        if (sortBy !== null) {
            $("#icon-" + sortBy).removeClass("glyphicon-sort");
            if (sortDirection === "Asc") {
                $("#icon-" + sortBy).addClass("glyphicon-triangle-top");
            }
            else $("#icon-" + sortBy).addClass("glyphicon-triangle-bottom");
        }
    }

    $(document).ready(function () {
        initializeSortButtons();
    });
</script>

<div class="row">
    <div class="col-md-12">
        <h2>Product Management</h2>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-hover">
            <thead>                
                <tr>
                    @foreach(var col in Model.Output.Columns)
                    {
                        <th>
                            <div>
                                <span>@col.Title</span>
                                <span>
                                    <a class="btn btn-xs" onclick="sortBy('@col.Identifier.AdditionalData');">
                                        <span id="icon-@col.Identifier.AdditionalData" class="glyphicon glyphicon-sort" aria-hidden="true"></span>
                                    </a>
                                </span>
                            </div>
                            <div>
                                <span>
                                    @if(col.FilterStrategy.Equals(Shop.Infrastructure.TableCreator.Column.TableColumnFilterStrategy.FreeText))
                                    {
                                        <input id="input-@col.Identifier.AdditionalData" type="text" />
                                    }
                                    else if(col.FilterStrategy.Equals(Shop.Infrastructure.TableCreator.Column.TableColumnFilterStrategy.NumericRange))
                                    {
                                        <input id="input-min-@col.Identifier.AdditionalData" type="text" maxlength="3" size="3" />
                                        <input id="input-max-@col.Identifier.AdditionalData" type="text" maxlength="3" size="3" />
                                    }
                                </span>
                            </div>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                    @foreach(var row in Model.Output.Rows)
                    {
                        <tr>
                            <td>@row.Cells[0]</td>
                            <td>@row.Cells[1]</td>
                            <td>@row.Cells[2]</td>
                            <td>
                                <button class="btn btn-default" onclick="editDetailsBtn(@row.Id)">Edit</button>
                                <div id="product-details-editor-@row.Id" style="display: none">
                                    @using(Html.BeginForm("UpdateProduct", "Product"))
                                    {
                                        <input name="id" type="hidden" value="@row.Id" />
                                        <div class="form-group">
                                            <input name="name" placeholder="Name" class="form-control" type="text" value="@row.Cells[0]" />
                                        </div>
                                        <div class="form-group">
                                            <input name="description" placeholder="Description" class="form-control" type="text" value="@row.Cells[2]" />
                                        </div>
                                        <a class="btn btn-default" onclick="cancelDetailsEditorBtn(@row.Id);">Cancel</a>
                                        <button class="btn btn-primary">Save</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>Total: @Model.Output.TotalItems</td>
                        <td><button class="btn btn-default" onclick="addDetailsBtn()">Add</button></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <div id="product-details-editor-add" style="display: none">
                                @using(Html.BeginForm("AddProduct", "Product"))
                                {
                                    <div class="form-group">
                                        <input name="name" placeholder="Name" class="form-control" type="text" value="" />
                                    </div>
                                    <div class="form-group">
                                        <input name="description" placeholder="Description" class="form-control" type="text" value="" />
                                    </div>
                                    <a class="btn btn-default" onclick="cancelDetailsAddBtn();">Cancel</a>
                                    <button class="btn btn-primary">Save</button>
                                }
                            </div>
                        </td>
                        <td></td>
                    </tr>
                </tbody>            
        </table>
        <ul class="pagination">
        @{
            var totalPages = Math.Ceiling(Model.Output.TotalItems / (decimal)Model.Input.PageSize);
        }           
        @for (var i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == Model.Input.PageNumber ? "active" : "")">
                <a onclick="changePage(@i)" class="page-link">@i</a>
            </li>
        }
    </ul>
        <script>
            function changePage(pageNumber) {
                if (pageNumber === @Model.Input.PageNumber) {
                    return;
                }
                let sortBy = findGetParameter("sortBy");
                let sortDirection = findGetParameter("sortDirection");

                let getQuery = "";
                if (sortBy !== null) {
                    getQuery += "sortBy=" + sortBy;
                    getQuery += "&sortDirection=" + sortDirection;
                    getQuery += "&pageNumber=" + pageNumber;
                    window.location.href = 'Product?' + getQuery;
                }
                else {
                    getQuery += "pageNumber=" + pageNumber;
                }
                window.location.href = 'Product?' + getQuery;
            }

            function editDetailsBtn(id) {
                $("#product-details-" + id).hide();
                $("#product-details-editor-" + id).show();
            }

            function cancelDetailsEditorBtn(id) {
                $("#product-details-" + id).show();
                $("#product-details-editor-" + id).hide();
                return false;
            }

            function addDetailsBtn() {
                $("#product-details-editor-add").show();
            }

            function cancelDetailsAddBtn() {
                $("#product-details-editor-add").hide();
                return false;
            }
        </script>
    </div>
</div>